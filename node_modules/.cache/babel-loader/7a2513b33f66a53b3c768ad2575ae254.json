{"ast":null,"code":"import _objectSpread from \"/Users/mariia/Documents/budget/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/mariia/Documents/budget/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport uuid from 'uuid/v4';\n\nfunction categoriesArr() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD':\n      var newCategories = {\n        title: action.title,\n        id: uuid(),\n        statusInput: false // console.log(newCategories.id);\n\n      };\n      return [].concat(_toConsumableArray(state), [newCategories]);\n\n    case 'EDIT':\n      console.log(act);\n      var result = action.data.map(function (el) {\n        return el.id === action.id ? el : _objectSpread({}, el, {\n          statusInput: true\n        });\n      }); // console.log(newCategories.id);\n\n      return [result];\n\n    default:\n      return state;\n  }\n}\n\nexport default categoriesArr;","map":{"version":3,"sources":["/Users/mariia/Documents/budget/src/redux/reducers/categoriesReducer.js"],"names":["uuid","categoriesArr","state","action","type","newCategories","title","id","statusInput","console","log","act","result","data","map","el"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,SAAjB;;AAEA,SAASC,aAAT,GAA0C;AAAA,MAAlBC,KAAkB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,UAAMC,aAAa,GAAG;AAACC,QAAAA,KAAK,EAACH,MAAM,CAACG,KAAd;AAAqBC,QAAAA,EAAE,EAAEP,IAAI,EAA7B;AAAiCQ,QAAAA,WAAW,EAAE,KAA9C,CACtB;;AADsB,OAAtB;AAEA,0CAAWN,KAAX,IAAkBG,aAAlB;;AAEA,SAAK,MAAL;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,UAAIC,MAAM,GAAGT,MAAM,CAACU,IAAP,CAAYC,GAAZ,CAAgB,UAAAC,EAAE;AAAA,eAAGA,EAAE,CAACR,EAAH,KAAUJ,MAAM,CAACI,EAAjB,GAAsBQ,EAAtB,qBAA+BA,EAA/B;AAAmCP,UAAAA,WAAW,EAAE;AAAhD,UAAH;AAAA,OAAlB,CAAb,CAFA,CAGA;;AACA,aAAO,CAACI,MAAD,CAAP;;AACF;AACE,aAAOV,KAAP;AAZJ;AAcC;;AAED,eAAeD,aAAf","sourcesContent":["import uuid from 'uuid/v4';\n\nfunction categoriesArr (state=[], action) {\n  switch (action.type) {\n    case 'ADD':\n      const newCategories = {title:action.title, id: uuid(), statusInput: false}\n      // console.log(newCategories.id);\n      return [...state, newCategories];\n\n      case 'EDIT':\n      console.log(act);\n      let result = action.data.map(el=> el.id === action.id ? el : {...el, statusInput: true} )\n      // console.log(newCategories.id);\n      return [result];\n    default:\n      return state;\n  }\n  }\n  \n  export default categoriesArr;"]},"metadata":{},"sourceType":"module"}