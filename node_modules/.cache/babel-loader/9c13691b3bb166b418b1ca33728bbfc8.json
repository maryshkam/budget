{"ast":null,"code":"import _toConsumableArray from \"/Users/mariia/Documents/budget/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/mariia/Documents/budget/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport uuid from 'uuid/v4';\n\nfunction historyArr() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'saveToHistory':\n      console.log(object);\n\n      var newRecord = _objectSpread({}, action.value, {\n        id: uuid(),\n        select: action.select.value,\n        statusMoney: action.statusMoney\n      });\n\n      localStorage.setItem('budget', JSON.stringify(action.status ? action.data.map(function (el) {\n        return el.id === action.value.id ? action.value : el;\n      }) : [].concat(_toConsumableArray(state), [newRecord]))); // return action.status ? state.map(el=> el.id === action.value.id ? action.value : el) : [...state, newContact]\n\n      return action.status ? action.data.map(function (el) {\n        return el.id === action.value.id ? action.value : el;\n      }) : [].concat(_toConsumableArray(state), [newRecord]);\n\n    case \"STORAGE\":\n      var historyBase = JSON.parse(localStorage.getItem('budget'));\n      historyBase = historyBase === null ? [] : historyBase;\n      return _toConsumableArray(historyBase);\n\n    case 'deleteFromHistory':\n      // console.log(action.id);\n      // console.log(action.data);\n      var result = action.data.filter(function (el) {\n        return el.id !== action.id;\n      });\n      localStorage.setItem('budget', JSON.stringify(result));\n      return result;\n\n    default:\n      return state;\n  }\n}\n\nexport default historyArr;","map":{"version":3,"sources":["/Users/mariia/Documents/budget/src/redux/reducers/historyReducer.js"],"names":["uuid","historyArr","state","action","type","console","log","object","newRecord","value","id","select","statusMoney","localStorage","setItem","JSON","stringify","status","data","map","el","historyBase","parse","getItem","result","filter"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,SAAjB;;AAEA,SAASC,UAAT,GAAuC;AAAA,MAAlBC,KAAkB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;;AACE,UAAMC,SAAS,qBAAML,MAAM,CAACM,KAAb;AAAoBC,QAAAA,EAAE,EAAEV,IAAI,EAA5B;AAAgCW,QAAAA,MAAM,EAAER,MAAM,CAACQ,MAAP,CAAcF,KAAtD;AAA6DG,QAAAA,WAAW,EAAET,MAAM,CAACS;AAAjF,QAAf;;AAEAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeb,MAAM,CAACc,MAAP,GAAgBd,MAAM,CAACe,IAAP,CAAYC,GAAZ,CAAgB,UAAAC,EAAE;AAAA,eAAGA,EAAE,CAACV,EAAH,KAAUP,MAAM,CAACM,KAAP,CAAaC,EAAvB,GAA6BP,MAAM,CAACM,KAApC,GAA2CW,EAA9C;AAAA,OAAlB,CAAhB,gCAA0FlB,KAA1F,IAAgGM,SAAhG,EAAf,CAA/B,EAJF,CAME;;AAEF,aAAOL,MAAM,CAACc,MAAP,GAAgBd,MAAM,CAACe,IAAP,CAAYC,GAAZ,CAAgB,UAAAC,EAAE;AAAA,eAAGA,EAAE,CAACV,EAAH,KAAUP,MAAM,CAACM,KAAP,CAAaC,EAAvB,GAA6BP,MAAM,CAACM,KAApC,GAA2CW,EAA9C;AAAA,OAAlB,CAAhB,gCAA0FlB,KAA1F,IAAgGM,SAAhG,EAAP;;AAEA,SAAK,SAAL;AACA,UAAIa,WAAW,GAAGN,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,QAArB,CAAX,CAAlB;AACAF,MAAAA,WAAW,GAAGA,WAAW,KAAK,IAAhB,GAAuB,EAAvB,GAA4BA,WAA1C;AACA,gCAAWA,WAAX;;AAEA,SAAK,mBAAL;AACA;AACA;AACA,UAAIG,MAAM,GAAGrB,MAAM,CAACe,IAAP,CAAYO,MAAZ,CAAmB,UAAAL,EAAE;AAAA,eAAEA,EAAE,CAACV,EAAH,KAAUP,MAAM,CAACO,EAAnB;AAAA,OAArB,CAAb;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeQ,MAAf,CAA/B;AAEA,aAAOA,MAAP;;AACA;AACE,aAAOtB,KAAP;AAxBJ;AA0BD;;AAED,eAAeD,UAAf","sourcesContent":["import uuid from 'uuid/v4';\n\nfunction historyArr (state=[], action) {\n  switch (action.type) {\n    case 'saveToHistory':\n    console.log(object);\n      const newRecord ={...action.value, id: uuid(), select: action.select.value, statusMoney: action.statusMoney};\n\n      localStorage.setItem('budget', JSON.stringify(action.status ? action.data.map(el=> el.id === action.value.id  ? action.value: el) : [...state,newRecord]))\n      \n      // return action.status ? state.map(el=> el.id === action.value.id ? action.value : el) : [...state, newContact]\n      \n    return action.status ? action.data.map(el=> el.id === action.value.id  ? action.value: el) : [...state,newRecord];\n\n    case \"STORAGE\":\n    let historyBase = JSON.parse(localStorage.getItem('budget'));\n    historyBase = historyBase === null ? [] : historyBase;\n    return [...historyBase];  \n\n    case 'deleteFromHistory':\n    // console.log(action.id);\n    // console.log(action.data);\n    let result = action.data.filter(el=>el.id !== action.id);\n    localStorage.setItem('budget', JSON.stringify(result));\n\n    return result;\n    default:\n      return state;\n  }\n}\n\nexport default historyArr;"]},"metadata":{},"sourceType":"module"}