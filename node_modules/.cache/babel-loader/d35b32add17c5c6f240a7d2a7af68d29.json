{"ast":null,"code":"var _jsxFileName = \"/Users/mariia/Documents/budget/src/CategoriesList/CategoriesList.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './CategoriesList.css';\nimport CategoriesListItem from '../CategoriesListItem/CategoriesListItem';\n\nvar CategoriesList = function CategoriesList(_ref) {\n  var categoriesArr = _ref.categoriesArr;\n  return React.createElement(\"div\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"list_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"List of categories:\"), React.createElement(\"ul\", {\n    className: \"list_box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, categoriesArr.length !== 0 ? categoriesArr.map(function (el) {\n    return React.createElement(CategoriesListItem, {\n      el: el,\n      key: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  }) : null));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    categoriesArr: state.categoriesArr\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nCategoriesList.propTypes = {\n  categoriesArr: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    statusInput: PropTypes.bool\n  }))\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesList);","map":{"version":3,"sources":["/Users/mariia/Documents/budget/src/CategoriesList/CategoriesList.jsx"],"names":["React","connect","PropTypes","CategoriesListItem","CategoriesList","categoriesArr","length","map","el","id","mapStateToProps","state","mapDispatchToProps","dispatch","propTypes","arrayOf","shape","value","string","isRequired","label","statusInput","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,sBAAP;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAqB;AAAA,MAAnBC,aAAmB,QAAnBA,aAAmB;AAC1C,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACLA,aAAa,CAACC,MAAd,KAAyB,CAAzB,GAA6BD,aAAa,CAACE,GAAd,CAAkB,UAACC,EAAD;AAAA,WAAO,oBAAC,kBAAD;AAAoB,MAAA,EAAE,EAAEA,EAAxB;AAA4B,MAAA,GAAG,EAAEA,EAAE,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAAA,GAAlB,CAA7B,GAAmG,IAD9F,CAFF,CADF;AASD,CAVD;;AAYA,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLN,IAAAA,aAAa,EAAEM,KAAK,CAACN;AADhB,GAAP;AAGD;;AAGD,SAASO,kBAAT,CAA6BC,QAA7B,EAAuC;AACvC,SAAO,EAAP;AAEC;;AAEDT,cAAc,CAACU,SAAf,GAA2B;AAIzBT,EAAAA,aAAa,EAAEH,SAAS,CAACa,OAAV,CACbb,SAAS,CAACc,KAAV,CAAgB;AACdC,IAAAA,KAAK,EAAEf,SAAS,CAACgB,MAAV,CAAiBC,UADV;AAEdC,IAAAA,KAAK,EAAElB,SAAS,CAACgB,MAAV,CAAiBC,UAFV;AAGdV,IAAAA,EAAE,EAAEP,SAAS,CAACgB,MAHA;AAIdG,IAAAA,WAAW,EAAEnB,SAAS,CAACoB;AAJT,GAAhB,CADa;AAJU,CAA3B;AAgBA,eAAerB,OAAO,CAACS,eAAD,EAAkBE,kBAAlB,CAAP,CAA8CR,cAA9C,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './CategoriesList.css';\nimport CategoriesListItem from '../CategoriesListItem/CategoriesListItem';\n\nconst CategoriesList = ({categoriesArr}) => {\n  return (\n    <div className='list'>\n      <h3 className='list_name'>List of categories:</h3>\n      <ul className='list_box'>\n{categoriesArr.length !== 0 ? categoriesArr.map((el)=> <CategoriesListItem el={el} key={el.id}/>) : null }\n\n      </ul>\n    </div>\n  );\n};\n\nfunction mapStateToProps (state) {\n  return {\n    categoriesArr: state.categoriesArr,\n  }\n}\n\n\nfunction mapDispatchToProps (dispatch) {\nreturn {\n}\n}\n\nCategoriesList.propTypes = {\n  \n  \n  \n  categoriesArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      id: PropTypes.string,\n      statusInput: PropTypes.bool\n    })\n  )\n\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (CategoriesList);"]},"metadata":{},"sourceType":"module"}